name: Build

on:
  push:
    branches: [ "main" ]
  pull_request_target:
    types: [ "opened", "synchronize", "reopened" ]
    branches: [ "main" ]
  # manual:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:

    runs-on: ubuntu-latest
    container: 
      image: rustlang/rust:nightly
    timeout-minutes: 10
    strategy:
      matrix:
        compile_features: [ async, multi_threaded, single_threaded ]

    services:
      samba:
        image: ghcr.io/avivnaaman/smb-tests:latest
        env:
          ACCOUNT_LocalAdmin: 123456
          SAMBA_CONF_LOG_LEVEL: 1
          SAMBA_VOLUME_CONFIG_MyShare: "[MyShare]; path=/shares/MyShare; read only = no; browseable = yes; smb encrypt = desired"
          SAMBA_VOLUME_CONFIG_PublicShare: "[PublicShare]; path=/shares/PublicShare; read only = no; browseable = yes; guest ok = yes; smb encrypt = disabled"
          SAMBA_GLOBAL_CONFIG_smb_SPACE_ports: "139 445"
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}
        options: --name samba --privileged --cap-add NET_ADMIN

    steps:
    - uses: actions/checkout@v4
    - name: Build/${{ matrix.compile_features }}
      run: cargo build --verbose --no-default-features --features "${{ matrix.compile_features }},sign,encrypt,compress,kerberos"
    - name: Tests/${{ matrix.compile_features }}
      run: |
        export SMB_RUST_TESTS_SERVER=samba
        cargo test --verbose --no-default-features --features "${{ matrix.compile_features }},sign,encrypt,compress,kerberos" -- --nocapture
        # Test without encryption and compression
        cargo test --verbose --no-default-features --features "${{ matrix.compile_features }},sign" -- --nocapture
        # Test signing with specific algorithms
        cargo test --verbose --no-default-features --features "${{ matrix.compile_features }},sign_cmac" -- --nocapture
        cargo test --verbose --no-default-features --features "${{ matrix.compile_features }},sign_gmac" -- --nocapture
        cargo test --verbose --no-default-features --features "${{ matrix.compile_features }},sign_hmac" -- --nocapture
