[package]
name = "smb"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
description.workspace = true
license.workspace = true
repository.workspace = true
authors.workspace = true
keywords.workspace = true
categories.workspace = true
readme.workspace = true

[dependencies]
smb-msg = { path = "../smb-msg", version = "0.10.1" }
smb-dtyp = { path = "../smb-dtyp", version = "0.10.1" }
smb-rpc = { path = "../smb-rpc", version = "0.10.1" }
smb-fscc = { path = "../smb-fscc", version = "0.10.1" }
smb-transport = { path = "../smb-transport", version = "0.10.1", default-features = false}

# Encoding/Decoding
binrw = { workspace = true }
modular-bitfield = { workspace = true }

# Async
tokio = { workspace = true, features = ["time", "rt"], optional = true }
futures = { workspace = true, optional = true }
futures-core = { workspace = true, optional = true }
futures-util = { workspace = true, optional = true }
tokio-util = { workspace = true, optional = true }
tokio-stream = { workspace = true, optional = true }
maybe-async = { workspace = true }

# General utils
rand = { workspace = true }
log = { workspace = true }
time = { workspace = true }
thiserror = { workspace = true }
pastey = { workspace = true }

url = "2.5.0"
byteorder = { version = "1.5.0", optional = true }

# APIs
sspi = { version = "0.18.0", features = ["ring"], default-features = false }
reqwest = { workspace = true, optional = true }

# Crypto
hmac = "0.13.0-rc.2"
sha2 = "0.11.0-rc.2"
rust-kbkdf = { version = "1.1.1" }
crypto-common = { version = "0.2.0-rc.4" }
aes = "0.9.0-rc.1"
aes-gcm = { version = "0.11.0-rc.1", optional = true }
cmac = { version = "0.8.0-rc.1", optional = true }
ccm = { version = "0.6.0-pre.0", optional = true }
aead = { version = "0.6.0-rc.2", optional = true }

# Compression
lz4_flex = { version = "0.11", default-features = false, features = [
    "std",
], optional = true }

# Dev - Tests
[dev-dependencies]
test-log = "0.2"
serial_test = "3.2"
temp-env = { version = "0.3.6", features = ["async_closure"] }
tokio = { workspace = true, features = ["rt", "macros"] }

[features]
default = ["sign", "encrypt", "compress", "async", "std-fs-impls", "netbios-transport"]

# Threading models
async = [
    "dep:tokio",
    "dep:futures-core",
    "dep:futures",
    "dep:tokio-util",
    "dep:tokio-stream",
    "dep:futures-util",
    "smb-transport/async",
]
multi_threaded = ["__is_sync"]
single_threaded = ["__is_sync"]
__is_sync = [
    "maybe-async/is_sync",
    "smb-rpc/is_sync",
    "reqwest?/blocking",
    "smb-transport/is_sync",
]

# Compression
compress_pattern_v1 = []
compress_lz4 = ["dep:lz4_flex"]
compress = ["compress_pattern_v1", "compress_lz4"]

# Encryption
encrypt_aes128ccm = ["dep:ccm", "dep:aead"]
encrypt_aes256ccm = ["dep:ccm", "dep:aead"]
encrypt_aesccm = ["encrypt_aes128ccm", "encrypt_aes256ccm"]
encrypt_aes128gcm = ["dep:aes-gcm", "dep:aead"]
encrypt_aes256gcm = ["dep:aes-gcm", "dep:aead"]
encrypt_aesgcm = ["encrypt_aes128gcm", "encrypt_aes256gcm"]
encrypt = ["encrypt_aesccm", "encrypt_aesgcm"]

# Signing
sign_gmac = ["dep:aes-gcm"]
sign_cmac = ["dep:cmac"]
sign_hmac = []
sign = ["sign_gmac", "sign_cmac", "sign_hmac"]

# Transport
quic = ["smb-transport/quic"]
rdma = ["smb-transport/rdma"]
netbios-transport = ["smb-transport/netbios-transport"]

# Kerberos requires reqwest for HTTP transport, for kerberos
kerberos = ["reqwest", "dep:byteorder"]

# Implement traits for std::fs::File/tokio::fs::File
std-fs-impls = ["tokio?/fs"]

# Estooric use cases
ksmbd-multichannel-compat = []

# Debugging
__debug-dump-keys = []

# Tests
test-multichannel = []
test-ndr64 = []
test-quic = []
test-rdma = []

[package.metadata.docs.rs]
features = ["async", "sign", "encrypt", "compress", "kerberos", "quic"]
no-default-features = true
